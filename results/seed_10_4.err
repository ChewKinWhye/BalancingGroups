/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.
  warnings.warn(
/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Traceback (most recent call last):
  File "main.py", line 52, in <module>
    run_experiment(command)
  File "/home/bizon/Desktop/KinWhye/BalancingGroups/train.py", line 102, in run_experiment
    model.update(i, x, y, g, epoch)
  File "/home/bizon/Desktop/KinWhye/BalancingGroups/models.py", line 164, in update
    majority_idx = torch.where((groups==0) | (groups==3))
KeyboardInterrupt
/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.
  warnings.warn(
/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Traceback (most recent call last):
  File "main.py", line 52, in <module>
    run_experiment(command)
  File "/home/bizon/Desktop/KinWhye/BalancingGroups/train.py", line 102, in run_experiment
    model.update(i, x, y, g, epoch)
  File "/home/bizon/Desktop/KinWhye/BalancingGroups/models.py", line 159, in update
    minority_total_loss += self.compute_loss_value_(i, x, y, g, epoch)
  File "/home/bizon/Desktop/KinWhye/BalancingGroups/models.py", line 147, in compute_loss_value_
    return self.loss(self.network(x), y).mean()
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/resnet.py", line 285, in forward
    return self._forward_impl(x)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/resnet.py", line 275, in _forward_impl
    x = self.layer3(x)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/resnet.py", line 154, in forward
    out = self.conv3(out)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 457, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 453, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: CUDA out of memory. Tried to allocate 50.00 MiB (GPU 0; 15.75 GiB total capacity; 14.69 GiB already allocated; 51.06 MiB free; 14.87 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.
  warnings.warn(
/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Traceback (most recent call last):
  File "main.py", line 52, in <module>
    run_experiment(command)
  File "/home/bizon/Desktop/KinWhye/BalancingGroups/train.py", line 102, in run_experiment
    model.update(i, x, y, g, epoch)
  File "/home/bizon/Desktop/KinWhye/BalancingGroups/models.py", line 159, in update
    minority_total_loss += self.compute_loss_value_(i, x, y, g, epoch)
  File "/home/bizon/Desktop/KinWhye/BalancingGroups/models.py", line 147, in compute_loss_value_
    return self.loss(self.network(x), y).mean()
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/resnet.py", line 285, in forward
    return self._forward_impl(x)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/resnet.py", line 274, in _forward_impl
    x = self.layer2(x)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/resnet.py", line 155, in forward
    out = self.bn3(out)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py", line 168, in forward
    return F.batch_norm(
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/functional.py", line 2438, in batch_norm
    return torch.batch_norm(
RuntimeError: CUDA out of memory. Tried to allocate 50.00 MiB (GPU 0; 15.75 GiB total capacity; 14.54 GiB already allocated; 33.06 MiB free; 14.89 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.
  warnings.warn(
/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Traceback (most recent call last):
  File "main.py", line 52, in <module>
    run_experiment(command)
  File "/home/bizon/Desktop/KinWhye/BalancingGroups/train.py", line 98, in run_experiment
    model.update(i, x, y, g, epoch)
  File "/home/bizon/Desktop/KinWhye/BalancingGroups/models.py", line 159, in update
    minority_total_loss += self.compute_loss_value_(i, x, y, g, epoch)
  File "/home/bizon/Desktop/KinWhye/BalancingGroups/models.py", line 147, in compute_loss_value_
    return self.loss(self.network(x), y).mean()
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/resnet.py", line 285, in forward
    return self._forward_impl(x)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/resnet.py", line 274, in _forward_impl
    x = self.layer2(x)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/resnet.py", line 155, in forward
    out = self.bn3(out)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py", line 168, in forward
    return F.batch_norm(
  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torch/nn/functional.py", line 2438, in batch_norm
    return torch.batch_norm(
RuntimeError: CUDA out of memory. Tried to allocate 50.00 MiB (GPU 0; 15.75 GiB total capacity; 14.54 GiB already allocated; 33.06 MiB free; 14.89 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.
  warnings.warn(
/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Traceback (most recent call last):
  File "main.py", line 52, in <module>
    run_experiment(command)
  File "/home/bizon/Desktop/KinWhye/BalancingGroups/train.py", line 98, in run_experiment
    model.update(i, x, y, g, epoch)Traceback (most recent call last):

  File "/home/bizon/Desktop/KinWhye/BalancingGroups/models.py", line 158, in update
      File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/multiprocessing/queues.py", line 245, in _feed
    send_bytes(obj)
x, y, g = x.cuda(), y.cuda(), g.cuda()
KeyboardInterrupt  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])

  File "/home/bizon/anaconda3/envs/balancinggroups/lib/python3.8/multiprocessing/connection.py", line 411, in _send_bytes
    self._send(header + buf)
